

The car has three Raspberry Pi 3 (called RPi below) boards, called
TCU, SCU and VCU.

TCU = telemetric control unit
SCU = sensor
VCU = vehicle

Sometimes I use "ECU" to refer to either of SCU and VCU.
[But I shouldn't]

VCU is connected to the steering and driving (both actuators and
sensors), as well as the LEDs. The speed sensors are at the inside of the
right wheels.

SCU has some other sensors.


TCU runs Linux and handles all communication with the outside world.
It has an ethernet socket and four USB sockets. It has a video socket,
for connecting a screen. (So do the others, but there these sockets
are not used.)

SCU and VCU are very similar. They run autosar, but are not meant to run
exactly the same MOPED RTS code - the last building step is different.

The three boards communicate with a CAN bus, which is implemented by
what's sitting on the extra little board connected to the main RPi boards.

At the front of the car is an ultra sound sensor.
Behind it are three LEDs: two yellow ones, and between them a red one.

There is also an ADC (analog to digital) converter. In the current
configuration, it is taking input from the power supply, for measuring
the voltage level.

XXX: write about what identifies a car


On each of the cars, there is a camera, pointing upwards

Output (written by VM.println or printf) from SCU and VCU can be seen
by connecting a serial cable to the UART pins. I used one with USB and
plugged it into the computer, where I ran GtkTerm. Use the Log function
of GtkTerm. The configuration should be 115200-8-N-1. The device is
probably called /dev/ttyUSB0.
If the cable is disconnected (for example if the car is to be run on its
own, or if you want to connect to the other one of VCU and SCU), you need
to setup the configuration again.


On each RPi are some small lights that indicate what the RPi is doing.
The second one is usually lit when the power is on. The first one blinks
slowly (once a second) on VCU and SCU to show that autosar is running.
If it doesn't start to blink when the board is turned on, turn off and on
again.
XXX: this role has been given to a LED on pins 34+32.


There are lights for indicating the power level, see moped-battery.txt.


http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL-232R_RPi.pdf


There are serial-USB cables which have four pins out. The colours seem
to be black, red, white, and one more. Don't use the red one. The
order is then: black, white, one more.

* Ultrasonic reader
HCSR-04

It has four pins, although it may sit mounted on a 6- or 8-pin holder (if it
does, it should sit in the middle).
Its pins are named Vcc, Trig, Echo, Gnd.

A resistor is added in series to Echo, to reduce the voltage from it
from 5V to 3.3V.

Google "hc sr04 raspberry pi" - there seem to be several solutions.

* I2C
MPU9250

The accelerometer, also containing a magnetometer.

RPi pins 1, 3, 5 and 9 (ground) are used.


* ADC
Mcp3008

driven by 3V: RPi pins 17 and 20
digital signal: RPi pins 12, 16, 18 and 24.

============================================================

Before the ESC is used the first time, it needs to be initialized. Follow
the instructions in its documentation.

One more things you may want to do with the ESC is reduce the speed by
using a programming card:

item value
1    3
2    2
3    3
4    3
5    1
6    9
7    5
8    1
9    1
10   3
Items 5 and 6 are probably the only ones that need to be changed.
